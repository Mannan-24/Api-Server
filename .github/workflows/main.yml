name: Deploy to EC2 with Docker

on:
  push:
    branches:
      - main  # Trigger this workflow on push to the 'main' branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner in GitHub Actions

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3  # Check out the code from the repository

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}  # Set your SSH private key in GitHub Secrets

      - name: Add SSH known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_PUBLIC_IP }} >> ~/.ssh/known_hosts  # Add EC2 host to known_hosts

      - name: Build Docker image
        run: |
          DOCKER_IMAGE_NAME="api-server"
          echo "Building Docker image: $DOCKER_IMAGE_NAME"
          docker build -t $DOCKER_IMAGE_NAME .  # Build the Docker image

      - name: Transfer code to EC2 instance
        run: |
          scp -o StrictHostKeyChecking=no -r ./* ${{ secrets.EC2_USER }}@${{ secrets.EC2_PUBLIC_IP }}:/home/${{ secrets.EC2_USER }}/Api-Server  # Copy files to EC2 instance

      - name: Run Docker container on EC2
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            cd /home/${{ secrets.EC2_USER }}/Api-Server
            DOCKER_IMAGE_NAME="api-server"
            echo "Building Docker image: $DOCKER_IMAGE_NAME"
            docker build -t $DOCKER_IMAGE_NAME .

            sudo docker stop api_server_container || true
            sudo docker rm api_server_container || true
            echo "Running Docker container: $DOCKER_IMAGE_NAME"
            sudo docker run -d --name api_server_container -p 80:5000 $DOCKER_IMAGE_NAME
          EOF

      - name: Notify deployment success
        run: echo "Deployment to EC2 was successful!"

